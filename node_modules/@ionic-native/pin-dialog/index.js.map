{"version":3,"sources":["../../../src/@ionic-native/plugins/pin-dialog/index.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAO,EAAE,UAAA,EAAW,MAAO,eAAA,CAAgB;AAC3C,OAAO,EAAE,OAAA,EAAS,MAAA,EAAQ,iBAAA,EAAkB,MAAO,oBAAA,CAAqB;AAGxE;;;;;;;;;;;;;;;;;;;;;GAqBG;AASH,IAAa,SAAS;IAAS,6BAAiB;IAAhD;;IAoBA,CAAC;IAnBC;;;;;;OAMG;IAKH,0BAAM,GAAN,UAAO,OAAe,EAAE,KAAa,EAAE,OAAiB,IAAsD,MAAM,CAAC,CAAC,CAAC;IAQzH,gBAAC;AAAD,CApBA,AAoBC,CApB8B,iBAAiB,GAoB/C;AANM,oBAAU,GAA0B;IAC3C,EAAE,IAAI,EAAE,UAAU,EAAE;CACnB,CAAC;AACF,kBAAkB;AACX,wBAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;AAPA;IAJC,OAAO,CAAC;QACP,YAAY,EAAE,CAAC;QACf,UAAU,EAAE,CAAC,CAAC,oBAAoB;KACnC,CAAC;;;;uCACqH;AAZ5G,SAAS;IARrB,MAAM,CAAC;QACN,UAAU,EAAE,WAAW;QACvB,MAAM,EAAE,2BAA2B;QACnC,SAAS,EAAE,mBAAmB;QAC9B,IAAI,EAAE,qCAAqC;QAC3C,SAAS,EAAE,CAAC,SAAS,EAAE,KAAK,CAAC;KAC9B,CAAC;GAEW,SAAS,CAoBrB;SApBY,SAAS","file":"index.js","sourceRoot":"","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Cordova, Plugin, IonicNativePlugin } from '@ionic-native/core';\r\n\r\n\r\n/**\r\n * @name Pin Dialog\r\n * @description\r\n *\r\n * @usage\r\n * ```typescript\r\n * import { PinDialog } from '@ionic-native/pin-dialog';\r\n *\r\n *\r\n * constructor(private pinDialog: PinDialog) { }\r\n *\r\n * ...\r\n *\r\n * this.pinDialog.prompt('Enter your PIN', 'Verify PIN', ['OK', 'Cancel'])\r\n *   .then(\r\n *     (result: any) => {\r\n *       if (result.buttonIndex == 1) console.log('User clicked OK, value is: ', result.input1);\r\n *       else if(result.buttonIndex == 2) console.log('User cancelled');\r\n *     }\r\n *   );\r\n * ```\r\n */\r\n@Plugin({\r\n  pluginName: 'PinDialog',\r\n  plugin: 'cordova-plugin-pin-dialog',\r\n  pluginRef: 'plugins.pinDialog',\r\n  repo: 'https://github.com/Paldom/PinDialog',\r\n  platforms: ['Android', 'iOS']\r\n})\r\n\r\nexport class PinDialog extends IonicNativePlugin {\r\n  /**\r\n   * Show pin dialog\r\n   * @param {string} message Message to show the user\r\n   * @param {string} title Title of the dialog\r\n   * @param {string[]} buttons Buttons to show\r\n   * @returns {Promise<{ buttonIndex: number, input1: string }>}\r\n   */\r\n  @Cordova({\r\n    successIndex: 1,\r\n    errorIndex: 4 // no error callback\r\n  })\r\n  prompt(message: string, title: string, buttons: string[]): Promise<{ buttonIndex: number, input1: string }> { return; }\r\n\r\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\r\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}